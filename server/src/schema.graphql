enum Sort {
    asc
    desc
}

type Messages {
    messageList: [Message!]!
    count: Int!
}

type Message {
    id: Int!
    text: String!
    likes: Int!
    dislikes: Int!
    createdAt: String!
    answers: [Answer!]!
}

type Answer {
    id: Int!
    text: String!
    likes: Int!
    dislikes: Int!
    createdAt: String!
    message: Message!
}

type Query {
    version: String!
    messages: Messages
    answers: [Answer!]!
}

input MessageInput{
    text: String!
}

input AnswerInput{
    text: String!
    messageId: Int!
}

type Mutation {
    createMessage(message: MessageInput!): Message!
    createAnswer(answer: AnswerInput!): Answer!
}

type Subscription {
    newMessage: Message
}